FORMAT: 1A
HOST: http://api.gizwits.com

# Gizwits Open API

## Error codes

| status | code | message                                         |
|--------|:----:|------------------------------------------------:|
|    400 | 9001 | mac already registered!                         |
|    400 | 9002 | product_key invalid                             |
|    400 | 9003 | appid invalid                                   |
|    400 | 9004 | token invalid                                   |
|    400 | 9005 | user not exist                                  |
|    400 | 9006 | token expired                                   |
|    400 | 9007 | m2m_id invalid                                  |
|    500 | 9008 | server error                                    |
|    400 | 9009 | code expired                                    |
|    400 | 9010 | code invalid                                    |
|    400 | 9011 | sandbox scale quota exhausted!                  |
|    400 | 9012 | production scale quota exhausted!               |
|    400 | 9013 | product has no request scale!                   |
|    400 | 9014 | device not found!                               |
|    400 | 9015 | form invalid!                                   |
|    400 | 9016 | did or passcode invalid!                        |
|    401 | 9017 | device not bound!                               |
|    400 | 9018 | phone unavailable!                              |
|    400 | 9019 | username unavailable!                           |
|    400 | 9020 | username or password error!                     |
|    400 | 9021 | send command failed!                            |
|    400 | 9022 | email unavailable!                              |
|    400 | 9023 | device is disabled!                             |
|    400 | 9024 | fail to notify m2m!                             |
|    400 | 9025 | attr invalid!                                   |
|    400 | 9026 | user invalid!                                   |
|    404 | 9027 | firmware not found!                             |
|    404 | 9028 | JD product info not found!                      |
|    400 | 9029 | datapoint data not found!                       |
|    404 | 9030 | scheduler not found!                            |
|    400 | 9031 | qq oauth key invalid!                           |
|    400 | 9032 | ota upgrade service OK, but in idle or disable! |
|    400 | 9033 | bt firmware unverified, except verify device!   |
|    404 | 9034 | bt firmware is OK, but nothing to upgrade!      |
|    500 | 9035 | Save kairosdb error!                            |
|    400 | 9036 | event not defined!                              |
|    400 | 9037 | send sms failed!                                |
|    xxx | 9999 | reserved                                        |

## Error Message

    {
      "error_code": "9002",
      "error_message": "xxx"
    }

# Group API for apps

## Users [/app/users]

### Create User [POST]

**Notice:** this API should go via https.

Both anonymous user register & login should call this API.

+ Request (application/json)

    + Header

            X-Gizwits-Application-Id: {appid}

    + Body

            {
                "phone_id": "apiary"
            }

+ Response 201 (application/json)

    + Body

            {
                "uid": "akkdlfeiow",
                "token": "akdlfkad",
                "expire_at": 13894002020
            }

+ Request (application/json)

    + Header

            X-Gizwits-Application-Id: {appid}

    + Body

            {
                "username": "bob",
                "password": "123456"
            }

+ Response 201 (application/json)

    + Body

            {
                "uid": "akkdlfeiow",
                "token": "akdlfkad",
                "expire_at": 13894002020
            }

+ Request (application/json)

    + Header

            X-Gizwits-Application-Id: {appid}

    + Body

            {
                "email": "bob@bob.com",
                "password": "123456"
            }

+ Response 201 (application/json)

    + Body

            {
                "uid": "akkdlfeiow",
                "token": "akdlfkad",
                "expire_at": 13894002020
            }


+ Request (application/json)

    + Header

            X-Gizwits-Application-Id: {appid}

    + Body

            {
                "phone": "123456",
                "password": "123456",
                "code": "abc"
            }

+ Response 201 (application/json)

    + Body

            {
                "uid": "akkdlfeiow",
                "token": "akdlfkad",
                "expire_at": 13894002020
            }


+ Request (application/json)

    + Header

            X-Gizwits-Application-Id: {appid}

    + Body

            {
                "authData": {
                    "src": "baidu|sina|qq",
                    "uid": "2346677",
                    "token":"pnktnjyb996sj4p156gjtp4im"
                }
            }

+ Response 201 (application/json)

    + Body

            {
                "uid": "akkdlfeiow",
                "token": "akdlfkad",
                "expire_at": 13894002020
            }

### Update User Info [PUT]

Anonymous user PUT username & password to become a normal user.

Anonymous user PUT phone & code & password to become a normal user.

Change Password PUT old_pwd & new_pwd.

Change email PUT email.

Change phone PUT phone & code.

Other additional fields:
* name optional, max_length=128
* gender optional, can be M | F | N
* birthday optional, "YYYY-MM-DD" or "MM-DD"
* address optional, max_length=256
* remark optional

+ request (application/json)

    + Header

            X-Gizwits-Application-Id: {appid}
            X-Gizwits-User-token: {token}

    + Body

            {
                "username": "bob",
                "password": "abda2"
            }

+ Response 200 (application/json)

    + Body

            {
                "updatedAt": "2011-11-07T21:25:10.623Z"
            }


+ Request (application/json)

    + Header

            X-Gizwits-Application-Id: {appid}
            X-Gizwits-User-token: {token}

    + Body

            {
                "old_pwd": "123456",
                "new_pwd": "123456"
            }

+ Response 200 (application/json)

    + Body

            {
                "updatedAt": "2011-11-07T21:25:10.623Z"
            }

+ Request (application/json)

    + Header

            X-Gizwits-Application-Id: {appid}
            X-Gizwits-User-token: {token}

    + Body

            {
                "email": "bob@bob.com"
            }

+ Response 200 (application/json)

    + Body

            {
                "updatedAt": "2011-11-07T21:25:10.623Z"
            }

+ Request (application/json)

    + Header

            X-Gizwits-Application-Id: {appid}
            X-Gizwits-User-token: {token}

    + Body

            {
                "phone": "1328830223",
                "code": "abc"
            }

+ Response 200 (application/json)

    + Body

            {
                "updatedAt": "2011-11-07T21:25:10.623Z"
            }

+ Request (application/json)

    + Header

            X-Gizwits-Application-Id: {appid}
            X-Gizwits-User-token: {token}

    + Body

            {
                "phone": "1328830223",
                "password": "123456",
                "code": "123"
            }

+ Response 200 (application/json)

    + Body

            {
                "updatedAt": "2011-11-07T21:25:10.623Z"
            }

+ Request (application/json)

    + Header

            X-Gizwits-Application-Id: {appid}
            X-Gizwits-User-token: {token}

    + Body

            {
                "name": "Bob",
                "gender": "M",
                "birthday": "1990-10-01",
                "address": "Guangzhou",
                "remark": "I'm a programmer!"
            }

+ Response 200 (application/json)

    + Body

            {
                "updatedAt": "2011-11-07T21:25:10.623Z"
            }

### 获取用户信息 [GET]

token 不存在，返回 400.
token 过期，返回 错误信息.
token 正确，返回 200.

+ Request (application/json)

    + Header

            X-Gizwits-Application-Id: {appid}
            X-Gizwits-User-token: {token}

+ Response 200 (application/json)

    + Body

            {
                "uid": "akkdlfeiow",
                "username": "abc",
                "email": "bob@bob.com",
                "phone": "13850222683",
                "is_anonymous": true,
                "name": "Bob",
                "gender": "M",
                "birthday": "1990-07-10",
                "address": "Guangzhou",
                "remark": "I'm a programmer!"
            }

## Login [/app/login]

### Login [POST]

**Notice:** this API should go via https.

username can be username or email or phone.


+ Request (application/json)

    + Header

            X-Gizwits-Application-Id: {appid}

    + Body

            {
                "username": "bob",
                "password": "123456"
            }

+ Response 200 (application/json)

    + Body

            {
                "uid": "akkdlfeiow",
                "token": "akdlfkad",
                "expire_at": 13894002020
            }

## Get & Verify Codes [/app/codes]

### Get & Verify Codes [POST]

+ Request (application/json)

    + Header

            X-Gizwits-Application-Id: {appid}

    + Body

            {
                "phone": "13223233"
            }

+ Response 200 (application/json)

+ Request (application/json)

    + Header

            X-Gizwits-Application-Id: {appid}

    + Body

            {
                "phone": "13223233",
                "code": "123456"
            }

+ Response 200 (application/json)


## Request Password Reset [/app/reset_password]

### Request Password Reset [POST]

Can reset password for user who has email or phone.

If reset password by phone, should call get codes API first.


+ Request (application/json)

    + Header

            X-Gizwits-Application-Id: {appid}

    + Body

            {
                "email": "bob@bob.com"
            }

+ Response 200 (application/json)

+ Request (application/json)

    + Header

            X-Gizwits-Application-Id: {appid}

    + Body

            {
                "phone": "13232433",
                "code": "13232",
                "new_pwd": "1323200"
            }

+ Response 200 (application/json)


## Device latest data [/app/devdata/{did}/latest]

+ Parameters
    + did (required, string, `gdGn7PzAYf4VrhnVag5x8D`)

### Get Device latest data [GET]

+ Request (application/json)

    + Header

            X-Gizwits-Application-Id: {appid}

+ Response 200 (application/json)

    + Body

            {
                "did": "gdGn7PzAYf4VrhnVag5x8D",
                "updated_at": 148293984328,
                "attr": {
                  "temp": 10,
                  "humi": 20
                }
            }


## Bindings [/app/bindings{?show_disabled,limit,skip}]

### Get Bound Devices [GET]

M2M will also call this API to get user bindings.

* Parameters
    + limit (optional, number, `20`)
    + skip (optional, number, `0`)
    + show_disabled (optional, string, `1`)

+ Request (application/json)

    + Header

            X-Gizwits-Application-Id: {appid}
            X-Gizwits-User-token: {token}

+ Response 200 (application/json)

    + Body

            {
                "devices": [{
                    "product_key": "akdlfkad",
                    "did": "abcada",
                    "mac": "1122334455667788",
                    "is_online": false,
                    "passcode": "123456",
                    "host": "m2m.gizwits.com",
                    "port": 3128,
                    "remark": "",
                    "is_disabled": false,
                    "type": "normal"
                },{
                    "product_key": "akdlfkad",
                    "did": "abcada",
                    "mac": "1122334455667788",
                    "is_online": false,
                    "passcode": "123456",
                    "host": "m2m.gizwits.com",
                    "port": 3128,
                    "remark": "",
                    "is_disabled": false
                    "type": "center_control"
                }]
            }

### Bind Devices [POST]

+ Request (application/json)

    + Header

            X-Gizwits-Application-Id: {appid}
            X-Gizwits-User-token: {token}

    + Body

            {
                "devices": [{
                    "did": "gdGn7PzAYf4VrhnVag5x8D",
                    "passcode": "gokit",
                    "remark": ""
                }]
            }

+ Response 200 (application/json)

           {
                "success": ["abc", "add"],
                "failed": ["adad", "ee"]
           }

### Unbind Devices [DELETE]

+ Request (application/json)

    + Header

            X-Gizwits-Application-Id: {appid}
            X-Gizwits-User-token: {token}

    + Body

            {
                "devices": [{
                    "did": "gdGn7PzAYf4VrhnVag5x8D"
                }]
            }

+ Response 200 (application/json)

           {
                "success": ["abc", "add"],
                "failed": ["adad", "ee"]
           }


## Device Detail [/app/devices/{did}]

### Get Device Info [GET]

+ Parameters
    + did (required, string, `abcada`)

+ Request (application/json)

    + Header

            X-Gizwits-Application-Id: {appid}
            X-Gizwits-User-token: {token}

+ Response 200 (application/json)

    + Body

            {
                "product_key": "akdlfkad",
                "did": "abcada",
                "mac": "1122334455667788",
                "is_online": false,
                "passcode": "123456",
                "host": "m2m.gizwits.com",
                "port": "3128",
                "is_disabled": false
            }

## Query Device [/app/devices{?product_key,mac}]

### Query Device [GET]

+ Parameters
    + product_key (required, string, `product_key`)
    + mac (required, string, `112233445566`)

+ Request (application/json)

    + Header

            X-Gizwits-Application-Id: {appid}

+ Response 200 (application/json)

    + Body

            {
                "did": "abcada",
                "passcode": "123456"
            }


## Control Device [/app/control/{did}]

+ Parameters
    + did (required, string, `did`)

### Remote Control Device [POST]

+ Request (application/json)

    + Header

            X-Gizwits-Application-Id: {appid}
            X-Gizwits-User-token: {token}

    + Body

            {
                "raw": [<byte>, <byte>, ...]
            }

+ Response 200 (application/json)

    + Body

            {}

### Set attr val [POST]

+ Request (application/json)

    + Header

            X-Gizwits-Application-Id: {appid}
            X-Gizwits-User-token: {token}

    + Body

            {
                "attrs": {
                    "temp": 10,
                    "humi": 20
                }
            }

+ Response 200 (application/json)

    + Body

            {}

## Scheduler [/app/scheduler{?limit,skip}]

### Create Scheduler [POST]

+ Request (application/json)

    + Header

            X-Gizwits-Application-Id: {appid}
            X-Gizwits-User-token: {token}

    + Body

            {
              "date": "2015-01-01",
              "time": "12:00",
              "repeat": "none",
              "task": [
                {
                  "did": "did1",
                  "product_key": "xxx",
                  "attrs": {
                    "attr1": val,
                    "attr2": val
                  }
                },
                {
                  "did": "did2",
                  "product_key": "xxx",
                  "attrs": {
                    "attr1": val,
                    "attr2": val
                  }
                }
              ],
              "retry_count": 3,
              "retry_task": "all"
            }

+ Response 201 (application/json)

    + Body

            {
              "id": "adkle"
            }

### Get Schedulers [GET]

+ Parameters
    + limit (optional, number, `20`)
    + skip (optional, number, `0`)

+ Request (application/text)

    + Header

            X-Gizwits-Application-Id: {appid}
            X-Gizwits-User-token: {token}

+ Response 200 (application/json)

    + Body

            [
              {
                "id": "abckaldkl",
                "created_at": "2015-01-01T12:00:00",
                "date": "2015-01-01",
                "time": "12:00",
                "repeat": "none",
                "task": [
                  {
                    "did": "did1",
                    "product_key": "xxx",
                    "attrs": {
                      "attr1": 1,
                      "attr2": 1
                    }
                  },
                  {
                    "did": "did2",
                    "product_key": "xxx",
                    "attrs": {
                      "attr1": 1,
                      "attr2": 2
                    }
                  }
                ],
                "retry_count": 3,
                "retry_task": "all"
              },
              {
                "id": "abckaldkl",
                "created_at": "2015-01-01T12:00:00",
                "date": "2015-01-01",
                "time": "12:00",
                "repeat": "none",
                "task": [
                  {
                    "did": "did1",
                    "product_key": "xxx",
                    "attrs": {
                      "attr1": "val",
                      "attr2": "val"
                    }
                  },
                  {
                    "did": "did2",
                    "product_key": "xxx",
                    "attrs": {
                      "attr1": "val",
                      "attr2": "val"
                    }
                  }
                ],
                "retry_count": 3,
                "retry_task": "all"
              }
            ]

## Remove Scheduler [/app/scheduler/{id}]

+ Parameters
  + id (required, string, `sid1`)

### Remove Scheduler [DELETE]

+ Request (application/text)

    + Header

            X-Gizwits-Application-Id: {appid}
            X-Gizwits-User-token: {token}

+ Response 200 (application/json)

## Get scheduler log [/app/scheduler/{id}/logs]

+ Parameters
  + id (required, string, `sid1`)

### Get latest scheduler log [GET]

+ Request (application/text)

    + Header

            X-Gizwits-Application-Id: {appid}
            X-Gizwits-User-token: {token}

+ Response 200 (application/json)

    + Body

            {
              "datetime": "2015-01-02T12:00:00",
              "status": "succeed|failed",
              "detail": {
                "did1": true,
                "did2": false
              }
            }

# Group API for devices

## Devices [/dev/devices]

### Create Device [POST]

#### Errors

| status |     code     | message |
|--------|:------------:|--------:|
| 400    | 9002         | product_key invalid      |

type 可以为 normal 或者 center_control

+ Request (application/x-www-form-urlencoded)

    + Body

            product_key=d69af59e38c711e4a29d52540052876d&passcode=gokit&mac=112233445566&type=normal


+ Response 201 (application/text)

    + Body

            did=gdGn7PzAYf4VrhnVag5x8D

### Disable Device [DELETE]

+ Request (application/x-www-form-urlencoded)

    + Body

            did=xxx&passcode=gokit


+ Response 200 (application/text)


## Device Provision [/dev/devices/{did}]

+ Parameters
    + did (required, string, `adaad`)

### Device Provision [GET]

+ Request (application/text)

+ Response 200 (application/text)

    + Body

            host=m2m.gizwits.com&port=3128&server_ts=1283200300

+ Request (application/text)

+ Response 200 (application/text)

    + Body

            host=m2m.gizwits.com&port=3128&server_ts=1283200300&3rd_cloud=jd&product_uuid=xxx


## OTA v4 - Get Target fid [/dev/ota/target_fid{?did,product_key,type,hard_version,soft_version,current_fid}]

### Get target fid [GET]

+ Parameters
    + did (required, string, `abcada`)
    + product_key (required, string, `pk`)
    + type (required, int, `1`) ... wifi is 1, and mcu is 2
    + hard_version (required, string, `hv`)
    + soft_version (required, string, `sv`)
    + current_fid (required, int, `fid`)

+ Request (application/text)

+ Response 200 (application/text)

    + Body

            target_fid=2&download_url=http://xxx&firmware_version=xxx

+ Request (application/text)

+ Response 400 (application/text)


## OTA v4 - Download Firmware [/dev/ota/download/{id}/{file}]

### Download Firmware [GET]

+ Parameters
    + id (required, int, `1`)
    + file (required, string, `firm.bin`)

+ Request (application/text)

+ Response 200 (application/text)

    + Header

            Firmware-Version: version
            Firmware-MD5: md5
            Content-Type: application/octet-stream
            Content-Disposition: attachment; filename=xxxx.bin
            Content-Length: 1000

    + Body

            file

## OTA v4.1 - Update Firmware Info and Check Latest [/dev/ota/v4.1/update_and_check/{did}]

### Update Firmware Info and Check Latest [POST]

+ type
    + wifi: 1
    + mcu: 2

+ Parameters
    + did (required, string, `abcada`)

+ Request (application/x-www-form-urlencoded)

    + Body

            passcode=xxx&type=1&hard_version=xxxxxxxxx&soft_version=xxxxxxxx

+ Response 200 (application/text)

    + Body

            soft_ver=SOFT0001&download_url=http://xxx


## OTA v4.1 - Download Firmware [/dev/ota/v4.1/download/{id}]

### Download Firmware [GET]

+ Parameters
    + id (required, int, `1`)

+ Request (application/text)

+ Response 200 (application/text)

    + Header

            Soft-Version: SOFT0001
            Firmware-MD5: md5
            Content-Type: application/octet-stream
            Content-Disposition: attachment; filename=xxxx.bin
            Content-Length: 1000

    + Body

            file


## Get JD+ Product Info [/dev/jd/product/{product_key}]

### Get JD+ Product Info [GET]

+ Parameters
    + product_key (required, string, `pk`)

+ Request (application/text)

+ Response 200 (application/text)

    + Body

            product_uuid=xxx


## Connect JD+ [/dev/jd/{did}]

### Update JD+ Info [POST]

+ Parameters
    + did (required, string, `did`)

+ Request (application/x-www-form-urlencoded)

    + Body

            feed_id=xxx&access_key=xxx


+ Response 200 (application/text)


# Group API for M2M

## Verify User [/m2m/verify/user]

### Verify User [POST]

+ Request (application/json)

    + Header

            X-Gizwits-Application-Id: {appid}
            X-Gizwits-M2M-Id: {m2m_id}

    + Body

            {
                "uid": "akkdlfeiow",
                "token": "akdlfkad"
            }

+ Response 401 (application/json)

+ Request (application/json)

    + Header

            X-Gizwits-Application-Id: {appid}
            X-Gizwits-M2M-Id: {m2m_id}

    + Body

            {
                "uid": "akkdlfeiow",
                "token": "akdlfkad"
            }

+ Response 200 (application/json)

## Verify Device [/m2m/verify/device]

### Verify Device [POST]

+ Request (application/json)

    + Header

            X-Gizwits-M2M-Id: {m2m_id}

    + Body

            {
                "did": "gdGn7PzAYf4VrhnVag5x8D",
                "passcode": "gokit"
            }

+ Response 401 (application/json)

+ Request (application/json)

    + Header

            X-Gizwits-M2M-Id: {m2m_id}

    + Body

            {
                "did": "gdGn7PzAYf4VrhnVag5x8D",
                "passcode": "gokit"
            }

+ Response 200 (application/json)

    + Body

            {
                "mac": "adkflald",
                "product_key": "akdlfkad",
                "gen_proto_ver": "00000003", # optional
                "bis_proto_ver": "0001",     # optional
                "jd": {                      # optional
                    "feed_id": "xxx",
                    "access_key": "xxx"
                }
            }

# Group API for BT/BLE

## Data [/bt/data{?product_key,device_sn,start_ts,end_ts,attrs,limit,skip}]

ts 为整数，精确到毫秒。

批量上传中，任何一笔数据错误，本次上传失败，不存出任何数据。

firmware 字段为可选参数。

### Save Data [POST]

+ Request (application/json)

    + Header

            X-Gizwits-Application-Id: {appid}
            X-Gizwits-User-token: {token}

    + Body

            {
                "product_key": "xxx",
                "device_sn": "xxx",
                "data": [
                    {
                        "attrs": {
                            "weight": 50,
                            "fat": 0.2,
                            "remark": "too thin"
                        },
                        "firmware": "1.0",
                        "ts": xxxxx
                    },
                    {
                        "attrs": {
                            "weight": 50,
                            "fat": 0.2,
                            "remark": "too thin"
                        },
                        "firmware": "1.0",
                        "ts": xxxxx
                    }],
                "phone_id": "xxxx"
            }

+ Response 201 (application/json)

### Retrieve Data [GET]

+ Parameters
    + product_key (required, string, `xxx`)
    + device_sn (optional, string, ``)
    + start_ts (optional, number, ``)
    + end_ts (optional, number, ``)
    + attrs (optional, string, `weight`)
    + limit (optional, number, `20`)
    + skip (optional, number, `0`)

+ Request (application/text)

    + Header

            X-Gizwits-Application-Id: {appid}
            X-Gizwits-User-token: {token}

+ Response 200 (application/json)

    + Body

            {
                "data": [{
                    "uid": "xxx",
                    "product_key": "xxx",
                    "device_sn": "xxx",
                    "attrs": {
                        "weight": 50,
                        "fat": 0.2,
                        "remark": "too thin"
                    }
                    "ts": xxx
                },
                {
                    "uid": "xxx",
                    "product_key": "xxx",
                    "device_sn": "xxx",
                    "attrs": {
                        "weight": 50,
                        "fat": 0.2,
                        "remark": "too thin"
                    }
                    "ts": xxx
                }]
            }

## Get latest version [/bt/latest{?device_sn,firmware,product_key}]

+ Parameters
    + device_sn (required, string, `sn_xxx`)
    + product_key (required, string, `xxx`)
    + firmware (required, string, `v1`)

### get latest [GET]

+ Request (application/text)

    + Header

            X-Gizwits-Application-Id: {appid}
            X-Gizwits-User-token: {token}

+ Response 200 (application/json)

    + Body

            {
                "version": "xx",
                "size": 102420,
                "download_url": "http://xxx/xxx"
            }

## Download firmware [/bt/firmware{?uuid,product_key}]

+ Parameters
    + product_key (required, string, `xxx`)
    + uuid (required, string, `xxxx`)

### Download [GET]

+ Request (application/text)

    + Header

            X-Gizwits-Application-Id: {appid}
            X-Gizwits-User-token: {token}

+ Response 200 (application/octet-stream)

    + Header

            Content-Type: application/octet-stream
            Content-Disposition: attachment; filename=xxxx.bin
            Content-Length: 1000
            Gizwits-Firmware-MD5: SAD8DS
            Gizwits-Firmware-Version: V1

    + Body

        binary


## Aggregated Data [/bt/agg_data{?product_key,device_sn,start_ts,end_ts,attrs,aggregator,unit}]

### Retrieve Aggregated Data [GET]

start_ts 和 end_ts 为带毫秒的整型时间戳。

attrs 只能为数字类型的数据点。

返回的 datetime 格式:

HOURS:  "2015072010"

DAYS:   "20150720"

WEEKS:  "201529"

MONTHS: "201507"

aggregator include [sum,avg,max,min]

unit include [HOURS,DAYS,WEEKS,MONTHS]

+ Parameters
    + product_key (required, string, `xxx`)
    + device_sn (optional, string, `xxxx`)
    + start_ts (required, number, `1111`)
    + end_ts (optional, number, `1111`)
    + attrs (required, string, `weight`)
    + aggregator (required, string, `sum`)
    + unit (required, string, `DAYS`)
+ Request (application/text)

    + Header

            X-Gizwits-Application-Id: {appid}
            X-Gizwits-User-token: {token}

+ Response 200 (application/json)

    + Body

            {
                "query": {
                    "start_ts": xxx,
                    "end_ts": xxx,
                    "attrs": "temp,humi",
                    "aggregator": "sum",
                    "unit": "DAYS"
                },
                "data": [{
                    "uid": "xxx",
                    "product_key": "xxx",
                    "device_sn": "xxx",
                    "attrs": {
                        "weight": 50,
                        "fat": 0.2
                    }
                    "datetime": xxx
                },
                {
                    "uid": "xxx",
                    "product_key": "xxx",
                    "device_sn": "xxx",
                    "attrs": {
                        "weight": 50,
                        "fat": 0.2
                    }
                    "datetime": xxx
                }]
            }

## Bindings [/bt/bindings{?limit,skip}]

### Get Bound Devices [GET]

* Parameters
    + limit (optional, number, `20`)
    + skip (optional, number, `0`)

+ Request (application/json)

    + Header

            X-Gizwits-Application-Id: {appid}
            X-Gizwits-User-token: {token}

+ Response 200 (application/json)

    + Body

            {
                "devices": [{
                    "product_key": "akdlfkad",
                    "device_sn": "abcada",
                    "remark": "mywatch"
                }, {
                    "product_key": "akdlfkad",
                    "device_sn": "dabc",
                    "remark": "ring"
                }]
            }

### Bind Devices [POST]

+ Request (application/json)

    + Header

            X-Gizwits-Application-Id: {appid}
            X-Gizwits-User-token: {token}

    + Body

            {
                "devices": [{
                    "product_key": "xxx",
                    "device_sn": "gdGn7PzAYf4VrhnVag5x8D",
                    "remark": ""
                }]
            }

+ Response 200 (application/json)

           {
                "success": ["abc", "add"],
                "failed": ["adad", "ee"]
           }

### Unbind Devices [DELETE]

+ Request (application/json)

    + Header

            X-Gizwits-Application-Id: {appid}
            X-Gizwits-User-token: {token}

    + Body

            {
                "devices": [{
                    "product_key": "xxx",
                    "device_sn": "gdGn7PzAYf4VrhnVag5x8D"
                }]
            }

+ Response 200 (application/json)

           {
                "success": ["abc", "add"],
                "failed": ["adad", "ee"]
           }


## Custom Event [/bt/events]

### Record Event [POST]

* product_key: required
* device_sn: optional
* firmware: optional
* phone_id: optional
* event: required
* count: required, minimum: 1, maximun: 100

+ Request (application/json)

    + Header

            X-Gizwits-Application-Id: {appid}
            X-Gizwits-User-token: {token}

    + Body

            {
                "product_key": "xxx",
                "device_sn": "xxx",
                "firmware": "1.0",
                "phone_id": "xxxx",
                "event": "send_ok",
                "count": 1
            }

+ Response 201 (application/json)

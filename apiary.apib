FORMAT: 1A
HOST: http://api.gizwits.com

# Gizwits Open API

## Error codes

| status |     code     | message |
|--------|:------------:|--------:|
| 400    | 9001         | mac already registered!      |
| 400    | 9002         | product_key invalid      |
| 400    | 9003         | appid invalid      |
| 400    | 9004         | token invalid      |
| 400    | 9005         | user not exist      |
| 400    | 9006         | token expired      |
| 400    | 9007         | m2m_id invalid      |
| 500    | 9008         | server error      |
| 400    | 9009         | code expired      |
| 400    | 9010         | code invalid      |
| 400    | 9011         | sandbox scale quota exhausted!      |
| 400    | 9012         | production scale quota exhausted!      |
| 400    | 9013         | product has no request scale!      |
| 400    | 9014         | device not found!      |
| 400    | 9015         | form invalid!      |
| 400    | 9016         | did or passcode invalid!      |
| 401    | 9017         | device not bound!      |
| 400    | 9018         | phone unavailable!      |
| 400    | 9019         | username unavailable!      |
| 400    | 9020         | username or password error!      |
| xxx    | 9999         | reserved      |

## Error Message

    {
      "error_code": "9002",
      "error_message": "xxx"
    }

# Group API for apps

## Users [/app/users]

### Create User [POST]

**Notice:** this API should go via https.

Both anonymous user register & login should call this API.

+ Request (application/json)

    + Header
    
            X-Gizwits-Application-Id: {appid}
            
    + Body
            
            {
                "phone_id": "apiary"
            }

+ Response 201 (application/json)

    + Body
    
            { 
                "uid": "akkdlfeiow", 
                "token": "akdlfkad",
                "expire_at": 13894002020
            }
            
+ Request (application/json)

    + Header
    
            X-Gizwits-Application-Id: {appid}
    
    + Body
    
            {
                "username": "bob",
                "password": "123456"
            }
            
+ Response 201 (application/json)

    + Body
    
            { 
                "uid": "akkdlfeiow", 
                "token": "akdlfkad",
                "expire_at": 13894002020
            }

+ Request (application/json)

    + Header
    
            X-Gizwits-Application-Id: {appid}
    
    + Body
    
            {
                "email": "bob@bob.com",
                "password": "123456"
            }

+ Response 201 (application/json)

    + Body

            {
                "uid": "akkdlfeiow",
                "token": "akdlfkad",
                "expire_at": 13894002020
            }


+ Request (application/json)

    + Header

            X-Gizwits-Application-Id: {appid}

    + Body

            {
                "phone": "123456",
                "password": "123456",
                "code": "abc"
            }
            
+ Response 201 (application/json)

    + Body
    
            { 
                "uid": "akkdlfeiow", 
                "token": "akdlfkad",
                "expire_at": 13894002020
            }

            
+ Request (application/json)

    + Header
    
            X-Gizwits-Application-Id: {appid}
    
    + Body
 
            {   
                "authData": {
                    "src": "baidu|sina|qq",
                    "uid": "2346677",
                    "token":"pnktnjyb996sj4p156gjtp4im"
                }
            }
            
+ Response 201 (application/json)

    + Body
    
            { 
                "uid": "akkdlfeiow", 
                "token": "akdlfkad",
                "expire_at": 13894002020
            }

### Update User Info [PUT]

Anonymous user PUT username & password to become a normal user.

+ Request (application/json)

    + Header

            X-Gizwits-Application-Id: {appid}
            X-Gizwits-User-token: {token}

    + Body

            {
                "username": "bob",
                "password": "abda2"
            }

+ Response 200 (application/json)

    + Body

            {
                "updatedAt": "2011-11-07T21:25:10.623Z"
            }


+ Request (application/json)

    + Header
    
            X-Gizwits-Application-Id: {appid}
            X-Gizwits-User-token: {token}
    
    + Body
    
            {
                "old_pwd": "123456",
                "new_pwd": "123456"
            }
            
+ Response 200 (application/json)

    + Body
    
            { 
                "updatedAt": "2011-11-07T21:25:10.623Z"
            }

+ Request (application/json)

    + Header

            X-Gizwits-Application-Id: {appid}
            X-Gizwits-User-token: {token}

    + Body

            {
                "email": "bob@bob.com",
            }

+ Response 200 (application/json)

    + Body

            {
                "updatedAt": "2011-11-07T21:25:10.623Z"
            }

+ Request (application/json)

    + Header

            X-Gizwits-Application-Id: {appid}
            X-Gizwits-User-token: {token}

    + Body

            {
                "phone": "1328830223",
                "code": "abc"
            }

+ Response 200 (application/json)

    + Body

            {
                "updatedAt": "2011-11-07T21:25:10.623Z"
            }

+ Request (application/json)

    + Header

            X-Gizwits-Application-Id: {appid}
            X-Gizwits-User-token: {token}

    + Body

            {
                "phone": "1328830223",
                "password": "123456",
                "code": "123"
            }

+ Response 200 (application/json)

    + Body

            {
                "updatedAt": "2011-11-07T21:25:10.623Z"
            }


## Login [/app/login]

### Login [POST]

**Notice:** this API should go via https.

username can be username or email or phone.


+ Request (application/json)

    + Header
    
            X-Gizwits-Application-Id: {appid}
    
    + Body
    
            {
                "username": "bob",
                "password": "123456"
            }
            
+ Response 200 (application/json)

    + Body
    
            { 
                "uid": "akkdlfeiow", 
                "token": "akdlfkad",
                "expire_at": 13894002020
            }

## Get & Verify Codes [/app/codes]

### Get & Verify Codes [POST]

+ Request (application/json)

    + Header

            X-Gizwits-Application-Id: {appid}

    + Body

            {
                "phone": "13223233"
            }

+ Response 200 (application/json)

+ Request (application/json)

    + Header

            X-Gizwits-Application-Id: {appid}

    + Body

            {
                "phone": "13223233",
                "code": "123456"
            }

+ Response 200 (application/json)


## Request Password Reset [/app/reset_password]

### Request Password Reset [POST]

Can reset password for user who has email or phone.

If reset password by phone, should call get codes API first.


+ Request (application/json)

    + Header

            X-Gizwits-Application-Id: {appid}

    + Body

            {
                "email": "bob@bob.com"
            }

+ Response 200 (application/json)

+ Request (application/json)

    + Header

            X-Gizwits-Application-Id: {appid}

    + Body

            {
                "phone": "13232433",
                "code": "13232',
                "new_pwd": "1323200"
            }

+ Response 200 (application/json)


## Device history data [/app/devdata/{did}{?start_ts,end_ts,entity,attr,limit,skip}]

History data is ordered by ts descending.

+ Parameters
    + did (required, string, `gdGn7PzAYf4VrhnVag5x8D`)
    + start_ts (optional, number, `1349032093`)
    + end_ts (optional, number, `1349032093`)
    + entity (optional, number, `1`)
    + attr (optional, string, `temp`)
    + limit (optional, number, `20`)
    + skip (optional, number, `0`)

### Retrieve device history data [GET]

+ Request (application/json)

    + Header
    
            X-Gizwits-Application-Id: {appid}
            X-Gizwits-User-token: {token}

+ Response 200 (application/json)

    + Body

            {
                "data": [{
                    "ts": 148293984328,
                    "entity": 1,
                    "attr": "temp",
                    "val": 10
                },{
                    "ts": 148293984328,
                    "entity": 1,
                    "attr": "temp",
                    "val": 10
                }]
            }


## Product history data batch [/app/devdata{?product_key,did,start_ts,end_ts,entity,attr,limit,skip}]

History data is ordered by ts descending.

+ Parameters
    + product_key (required, string, `pk`)
    + did (optional, string, `gdGn7PzAYf4VrhnVag5x8D`)
    + start_ts (optional, number, `1349032093`)
    + end_ts (optional, number, `1349032093`)
    + entity (optional, number, `1`)
    + attr (optional, string, `temp`)
    + limit (optional, number, `20`)
    + skip (optional, number, `0`)

### Retrieve product history data batch [GET]

+ Request (application/json)

    + Header

            X-Gizwits-Application-Id: {appid}

+ Response 200 (application/json)

    + Body

            {
                "data": [{
                    "did": "gdGn7PzAYf4VrhnVag5x8D",
                    "ts": 148293984328,
                    "entity": 1,
                    "attr": "temp",
                    "val": 10
                },{
                    "did": "gdGn7PzAYf4VrhnVag5x8D",
                    "ts": 148293984328,
                    "entity": 1,
                    "attr": "temp",
                    "val": 10
                }]
            }


## Bindings [/app/bindings{?show_disabled,limit,skip}]

### Get Bound Devices [GET]

M2M will also call this API to get user bindings.

* Parameters
    + limit (optional, number, `20`)
    + skip (optional, number, `0`)
    + show_disabled (optional, string, `1`)

+ Request (application/json)

    + Header
    
            X-Gizwits-Application-Id: {appid}
            X-Gizwits-User-token: {token}
            
+ Response 200 (application/json)

    + Body
    
            {
                "devices": [{
                    "product_key": "akdlfkad",
                    "did": "abcada",
                    "mac": "1122334455667788",
                    "is_online": false,
                    "passcode": "123456",
                    "host": "m2m.gizwits.com",
                    "port": 3128,
                    "remark": "",
                    "is_disabled": false
                },{
                    "product_key": "akdlfkad",
                    "did": "abcada",
                    "mac": "1122334455667788",
                    "is_online": false,
                    "passcode": "123456",
                    "host": "m2m.gizwits.com",
                    "port": 3128,
                    "remark": "",
                    "is_disabled": false
                }]
            }

### Bind Devices [POST]

+ Request (application/json)

    + Header
    
            X-Gizwits-Application-Id: {appid}
            X-Gizwits-User-token: {token}
            
    + Body
    
            {
                "devices": [{
                    "did": "gdGn7PzAYf4VrhnVag5x8D",
                    "passcode": "gokit",
                    "remark": "" # optional
                }]
            }
    
+ Response 200 (application/json)

           {
                "success": ['abc', 'add'],
                "failed": ['adad', 'ee']
           }

### Unbind Devices [DELETE]

+ Request (application/json)

    + Header
    
            X-Gizwits-Application-Id: {appid}
            X-Gizwits-User-token: {token}
            
    + Body
    
            {
                "devices": [{
                    "did": "gdGn7PzAYf4VrhnVag5x8D"
                }]
            }
    
+ Response 200 (application/json)

           {
                "success": ['abc', 'add'],
                "failed": ['adad', 'ee']
           }


## Device Detail [/app/devices/{did}]
    
### Get Device Info [GET]

+ Parameters
    + did (required, string, `abcada`)

+ Request (application/json)

    + Header
    
            X-Gizwits-Application-Id: {appid}
            X-Gizwits-User-token: {token}
            
+ Response 200 (application/json)

    + Body
    
            {
                "product_key": "akdlfkad",
                "did": "abcada",
                "mac": "1122334455667788",
                "is_online": false,
                "passcode": "123456",
                "host": "m2m.gizwits.com",
                "port": "3128",
                "is_disabled": false
            }

## Query Device [/app/devices{?product_key,mac}]

### Query Device [GET]

+ Parameters
    + product_key (required, string, `product_key`)
    + mac (required, string, `112233445566`)

+ Request (application/json)

    + Header
    
            X-Gizwits-Application-Id: {appid}
            
+ Response 200 (application/json)

    + Body
    
            {
                "did": "abcada",
                "passcode": "123456",
            }


## Control Device [/app/control/{did}]

+ Parameters
    + did (required, string, `did`)

### Remote Control Device [POST]

+ Request (application/json)

    + Header
    
            X-Gizwits-Application-Id: {appid}
            X-Gizwits-User-token: {token}

    + Body
    
            {
                "raw": [<byte>, <byte>, ...]
            }
            
+ Response 200 (application/json)

    + Body
    
            {}

### Set attr val [POST]

+ Request (application/json)

    + Header

            X-Gizwits-Application-Id: {appid}
            X-Gizwits-User-token: {token}

    + Body

            {
                "attr": "temp",
                "val": 10
            }

+ Response 200 (application/json)

    + Body

            {}

# Group API for devices

## Devices [/dev/devices]

### Create Device [POST]

#### Errors

| status |     code     | message |
|--------|:------------:|--------:|
| 400    | 9002         | product_key invalid      |

+ Request (application/x-www-form-urlencoded)

    + Body
        
            product_key=d69af59e38c711e4a29d52540052876d&passcode=gokit&mac=112233445566

            
+ Response 201 (application/text)

    + Body
    
            did=gdGn7PzAYf4VrhnVag5x8D

### Disable Device [DELETE]

+ Request (application/x-www-form-urlencoded)

    + Body

            did=xxx&passcode=gokit


+ Response 200 (application/text)


## Device Provision [/dev/devices/{did}]

+ Parameters
    + did (required, string, `adaad`)

### Device Provision [GET]

+ Request (application/text)

+ Response 200 (application/text)

    + Body
    
            host=m2m.gizwits.com&port=3128&server_ts=1283200300

            
## OTA - Get Target fid [/dev/ota/target_fid{?did,product_key,type,hard_version,soft_version,current_fid}]

### Get target fid [GET]

+ Parameters
    + did (required, string, `abcada`)
    + product_key (required, string, `pk`)
    + type (required, int, `1`) ... wifi is 1, and mcu is 2
    + hard_version (required, string, `hv`)
    + soft_version (required, string, `sv`)
    + current_fid (required, int, `fid`)

+ Request (application/text)

+ Response 200 (application/text)

    + Body
    
            target_fid=2&download_url=http://xxx&firmware_version=xxx


## OTA - Download Firmware [/dev/ota/download/{id}/{file}]

### Download Firmware [GET]

+ Parameters
    + id (required, int, `1`)
    + file (required, string, `firm.bin`)

+ Request (application/text)

+ Response 200 (application/text)

    + Header

            Firmware-Version: version
            Firmware-MD5: md5
            Content-Type: application/octet-stream
            Content-Disposition: attachment; filename=xxxx.bin
            Content-Length: 1000

    + Body

            file


## Get JD+ Product Info [/dev/jd/product/{product_key}]

### Get JD+ Product Info [GET]

+ Parameters
    + product_key (required, string, `pk`)

+ Request (application/text)

+ Response 200 (application/text)

    + Body

            product_uuid=xxx


## Connect JD+ [/dev/jd/{did}]

### Update JD+ Info [POST]

+ Parameters
    + did (required, string, `did`)

+ Request (application/x-www-form-urlencoded)

    + Body

            feed_id=xxx&access_key=xxx


+ Response 200 (application/text)


# Group API for M2M

## Verify User [/m2m/verify/user]

### Verify User [POST]

+ Request (application/json)

    + Header
    
            X-Gizwits-Application-Id: {appid}
            X-Gizwits-M2M-Id: {m2m_id}

    + Body
    
            {
                "uid": "akkdlfeiow", 
                "token": "akdlfkad"
            }
            
+ Response 401 (application/json)

+ Request (application/json)

    + Header
    
            X-Gizwits-M2M-Id: {m2m_id}

    + Body
    
            {
                "uid": "akkdlfeiow", 
                "token": "akdlfkad"
            }
            
+ Response 200 (application/json)

## Verify Device [/m2m/verify/device]

### Verify Device [POST]

+ Request (application/json)

    + Header
    
            X-Gizwits-M2M-Id: {m2m_id}

    + Body
    
            {
                "did": "gdGn7PzAYf4VrhnVag5x8D", 
                "passcode": "gokit",
            }
            
+ Response 401 (application/json)

+ Request (application/json)

    + Header
    
            X-Gizwits-M2M-Id: {m2m_id}

    + Body
    
            {
                "did": "gdGn7PzAYf4VrhnVag5x8D", 
                "passcode": "gokit",
            }
            
+ Response 200 (application/json)

    + Body

            {
                "mac": "adkflald",
                "product_key": "akdlfkad",
                "gen_proto_ver": "00000003", # optional
                "bis_proto_ver": "0001",     # optional
                "jd": {                      # optional
                    "feed_id": "xxx",
                    "access_key": "xxx"
                }
            }

## Product Throttle [/m2m/product/msg_throttle]

### Product Throttle List [GET]

* Parameters
    + limit (optional, number, `20`)
    + skip (optional, number, `0`)
    + updated_at (required, number, `1458542963`)

+ Request (application/json)

    + Header

            X-Gizwits-M2M-Id: {m2m_id}

+ Response 200 (application/json)

    + Body

           {
            "meta": {
                "pre": "/m2m/product/msg_throttle?skip=0&limit=2&updated_at=12",
                "limit": 2,
                "skip": 1,
                "total": 6,
                "updated_at": 12,
                "next": "/m2m/product/msg_throttle?skip=3&limit=2&updated_at=12"
            },
            "objects": [
                {
                    "time_scope": 60,
                    "quota": 30,
                    "product_key": "64e5a7d5bab348259d5d7bc2ab2bcb5a",
                    "updated_at": 1458291295
                },
                {"time_scope": 60,
                 "quota": 30,
                 "product_key": "37b53e763ff842329cf524b8b3d831d6",
                "updated_at": 1458291604}
            ]}


# Group API for BT/BLE Data

## Data [/bt/data{?product_key,device_sn,start_ts,end_ts,limit,skip}]

### Save Data [POST]

+ Request (application/json)

    + Header

            X-Gizwits-Application-Id: {appid}
            X-Gizwits-User-token: {token}

    + Body

            {
                "product_key": "xxx",
                "device_sn": "xxx",
                "attrs": {
                    "weight": 50,
                    "fat": 0.2,
                    "remark": "too thin"
                }
                "ts": xxxxx,
                "phone_id": "xxxx"
            }

+ Response 201 (application/json)

### Retrieve Data [GET]

+ Parameters
    + product_key (optional, string, ``)
    + device_sn (optional, string, ``)
    + start_ts (optional, number, ``)
    + end_ts (optional, number, ``)
    + limit (optional, number, `20`)
    + skip (optional, number, `0`)

+ Request (application/text)

    + Header

            X-Gizwits-Application-Id: {appid}
            X-Gizwits-User-token: {token}

+ Response 200 (application/json)

    + Body

            {
                "data": [{
                    "uid": "xxx",
                    "product_key": "xxx",
                    "device_sn": "xxx",
                    "attrs": {
                        "weight": 50,
                        "fat": 0.2,
                        "remark": "too thin"
                    }
                    "ts": xxx
                },
                {
                    "uid": "xxx",
                    "product_key": "xxx",
                    "device_sn": "xxx",
                    "attrs": {
                        "weight": 50,
                        "fat": 0.2,
                        "remark": "too thin"
                    }
                    "ts": xxx
                }]
            }